#!/bin/bash
# Usage: latex2png.sh foo.tex

set -e

do_abort=0
if [ ! -e "$1" ]; then
    echo "LaTeX source file '$1' not found." >&2
    do_abort=1
fi

if [ ! "$1" = "$(basename -- "$1" .tex).tex" ]; then
    echo "LaTeX source file doesn't end in '.tex'." >&2
    do_abort=1
fi

which pdflatex >/dev/null || {
    echo "'pdflatex' not found. Install a package like texlive-latex-base." >&2
    do_abort=1
}

which pdfcrop >/dev/null || {
    echo "'pdfcrop' not found. Install a package like texlive-extra-utils." >&2
    do_abort=1
}

which pdftoppm >/dev/null || {
    echo "'pdftoppm' not found. Install a package like poppler-utils." >&2
    do_abort=1
}

[ "$do_abort" = "1" ] && exit 1

tempdir="`mktemp -d`"
function cleanup {
    rm -r -- "$tempdir" 2>/dev/null
}
trap cleanup EXIT

if grep documentclass -- "$1" >/dev/null; then
    multipage_mode=1
    cp -- "$1" "$tempdir/main.tex"
else
    multipage_mode=0
    cat > "$tempdir/main.tex" <<'EOF'
\documentclass[12pt]{article}
\usepackage[utf8]{inputenc}
\usepackage{amsmath,amssymb,stmaryrd,mathtools}
\usepackage[all]{xy}
\thispagestyle{empty}
\begin{document}\[
EOF
    cat -- "$1" >> "$tempdir/main.tex"
    echo '\]\end{document}' >> "$tempdir/main.tex"
fi

(
    cd "$tempdir"
    if pdflatex main </dev/null &>/dev/null; then
        pdfcrop --margins 0 main.pdf cropped.pdf &>/dev/null
        pdftoppm -rx 600 -ry 600 -png cropped.pdf cropped
    else
        cat main.log >&2
    fi
)

basename="$(basename -- "$1" .tex)"

if [ -e "$tempdir/cropped.pdf" ]; then
    rm -f -- "$basename.log"
    rm -f -- "$basename.png"
    if [ "$multipage_mode" = "0" ]; then
        cp -- "$tempdir/cropped-1.png" "$basename.png"
    else
        i=1
        rm -f "$basename"-??.png
        for file in "$tempdir"/cropped-*.png; do
            cp -- "$file" "$basename-$(printf %02d $i).png"
            : $((i++))
        done
    fi
else
    cp -- "$tempdir/main.log" "$basename.log"
    exit 1
fi
